labs(title = "Trends in Micronutrient Deficiencies Over Time",
x = "Year",
y = "Count")
# Load necessary packages
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
# Example data
data <- data.frame(
year = rep(2015:2023, each = 100),
intervention = rep(c("Pre", "Post"), each = 450),
deficiency = sample(c("Iron", "Vitamin A", "Iodine", "Zinc"), 900, replace = TRUE)
)
# Frequency table
freq_table <- data %>%
group_by(year, deficiency) %>%
summarise(count = n())
# Plotting trends over time
ggplot(freq_table, aes(x = year, y = count, color = deficiency)) +
geom_line() +
labs(title = "Trends in Micronutrient Deficiencies Over Time",
x = "Year",
y = "Count")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse) # for data handling
library(EpiStats)  # for epidemiology
library(knitr)      # to get well formatted tables
library(rstatix)
library(gtsummary)
catheter <- read.csv("full_cohort_data.csv")
glimpse(catheter)
variables.of.int <- catheter %>%
select(IAC = aline_flg,
death = day_28_flg,
age,
sex = gender_num,
sofa = sofa_first,
service_unit,
COPD = copd_flg,
Other.resp.D = resp_flg,
CHF = chf_flg,
AF = afib_flg,
chr.renal.D = renal_flg,
chr.liver.D = liver_flg,
coronary.D = cad_flg,
stroke = stroke_flg,
malignancy = mal_flg,
wbc = wbc_first,
hemoglobin = hgb_first,
platelet = platelet_first,
sodium = sodium_first,
potassium = potassium_first,
bicarbonate = tco2_first,
chloride = chloride_first,
urea = bun_first,
creat = creatinine_first,
po2 = po2_first,
pco2 = pco2_first)
head(variables.of.int)
#variables.of.int$IAC <- factor(variables.of.int$IAC, levels = c(1,0))
#variables.of.int$death <- factor(variables.of.int$death, levels = c(1,0))
#variables.of.int$sex <- factor(variables.of.int$sex, levels = c(0,1),
#ordered = TRUE) # considering male as the reference in the model
#variables.of.int$service_unit <- factor(variables.of.int$service_unit,
##levels = c("FICU", "MICU", "SICU"),
# ordered = TRUE)
#variables.of.int$COPD <- factor(variables.of.int$COPD, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$Other.resp.D <- factor(variables.of.int$Other.resp.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$CHF <- factor(variables.of.int$CHF, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$AF <- factor(variables.of.int$AF, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$chr.renal.D <- factor(variables.of.int$chr.renal.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$chr.liver.D <- factor(variables.of.int$chr.liver.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$coronary.D <- factor(variables.of.int$coronary.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$stroke <- factor(variables.of.int$stroke,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$malignancy <- factor(variables.of.int$malignancy,
#levels = c(1,0), ordered = TRUE)
result.1 <- CS(variables.of.int, death, IAC, exact = TRUE, full = FALSE)
kable(result.1$df1, align = result.1$df1.align)
kable(result.1$df2, align = result.1$df2.align)
model.1 <- glm(death ~ IAC + age + sex + sofa + service_unit + COPD + Other.resp.D + CHF + AF + chr.renal.D + chr.liver.D + coronary.D + stroke + malignancy + wbc + hemoglobin + platelet + sodium + potassium + bicarbonate + chloride + urea + creat + po2 + pco2, variables.of.int, family = poisson(link = "log"))
summary(model.1)
anova(model.1)
kable(round(exp(cbind(RR = coef(model.1), confint(model.1))), 3), align = "c")
round(exp(cbind(RR = coef(model.1), confint(model.1))), 3)
tbl_regression(model.1, exponentiate = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse) # for data handling
library(EpiStats)  # for epidemiology
library(knitr)      # to get well formatted tables
library(rstatix)
library(gtsummary)
library(report)
catheter <- read.csv("full_cohort_data.csv")
glimpse(catheter)
variables.of.int <- catheter %>%
select(IAC = aline_flg,
death = day_28_flg,
age,
sex = gender_num,
sofa = sofa_first,
service_unit,
COPD = copd_flg,
Other.resp.D = resp_flg,
CHF = chf_flg,
AF = afib_flg,
chr.renal.D = renal_flg,
chr.liver.D = liver_flg,
coronary.D = cad_flg,
stroke = stroke_flg,
malignancy = mal_flg,
wbc = wbc_first,
hemoglobin = hgb_first,
platelet = platelet_first,
sodium = sodium_first,
potassium = potassium_first,
bicarbonate = tco2_first,
chloride = chloride_first,
urea = bun_first,
creat = creatinine_first,
po2 = po2_first,
pco2 = pco2_first)
head(variables.of.int)
#variables.of.int$IAC <- factor(variables.of.int$IAC, levels = c(1,0))
#variables.of.int$death <- factor(variables.of.int$death, levels = c(1,0))
#variables.of.int$sex <- factor(variables.of.int$sex, levels = c(0,1),
#ordered = TRUE) # considering male as the reference in the model
#variables.of.int$service_unit <- factor(variables.of.int$service_unit,
##levels = c("FICU", "MICU", "SICU"),
# ordered = TRUE)
#variables.of.int$COPD <- factor(variables.of.int$COPD, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$Other.resp.D <- factor(variables.of.int$Other.resp.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$CHF <- factor(variables.of.int$CHF, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$AF <- factor(variables.of.int$AF, levels = c(1,0),
#ordered = TRUE)
#variables.of.int$chr.renal.D <- factor(variables.of.int$chr.renal.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$chr.liver.D <- factor(variables.of.int$chr.liver.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$coronary.D <- factor(variables.of.int$coronary.D,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$stroke <- factor(variables.of.int$stroke,
#levels = c(1,0), ordered = TRUE)
#variables.of.int$malignancy <- factor(variables.of.int$malignancy,
#levels = c(1,0), ordered = TRUE)
result.1 <- CS(variables.of.int, death, IAC, exact = TRUE, full = FALSE)
kable(result.1$df1, align = result.1$df1.align)
kable(result.1$df2, align = result.1$df2.align)
result.2 <- CSTable(variables.of.int, "death",
exposure = c("IAC", "sex", "COPD", "Other.resp.D", "CHF", "chr.renal.D", "AF"),
exact = TRUE,
sort = "rr",
full = TRUE)
kable(result.2$df, align = result.2$align)
result.3 <- CSInter(variables.of.int, "death", "IAC", by = "service_unit", full = TRUE)
kable(result.3$df1, align = result.3$align)
kable(result.3$df2, align = result.3$align)
model.1 <- glm(death ~ IAC + age + sex + sofa + service_unit + COPD + Other.resp.D + CHF + AF + chr.renal.D + chr.liver.D + coronary.D + stroke + malignancy + wbc + hemoglobin + platelet + sodium + potassium + bicarbonate + chloride + urea + creat + po2 + pco2, variables.of.int, family = poisson(link = "log"))
summary(model.1)
anova(model.1)
tbl_regression(model.1, exponentiate = TRUE)
report(model.1)
```{r, results='asis'}
get_summary_stats(variables.of.int)
get_summary_stats(variables.of.int, type = "common")
variables.of.int %>%
mutate(IAC = case_when(IAC == "yes" ~ 1, IAC == "no" ~ 0))
variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" ))
variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(death = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(sex = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" ))
variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(death = case_when(death == 1 ~ "yes" , death == 0 ~ "no" )) %>%
mutate(sex = case_when(sex == 1 ~ "male" , sex == 0 ~ "female" ))
variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(death = case_when(death == 1 ~ "yes" , death == 0 ~ "no" )) %>%
mutate(sex = case_when(sex == 1 ~ "male" , sex == 0 ~ "female" )) %>%
mutate(COPD = case_when(COPD == 1 ~ "yes" , COPD == 0 ~ "no" )) %>%
mutate(Other.resp.D = case_when(Other.resp.D == 1 ~ "yes" , Other.resp.D == 0 ~ "no" )) %>%
mutate(CHF = case_when(CHF == 1 ~ "yes" , CHF == 0 ~ "no" )) %>%
mutate(AF = case_when(AF == 1 ~ "yes" , AF == 0 ~ "no" )) %>%
mutate(chr.renal.D = case_when(chr.renal.D == 1 ~ "yes" , chr.renal.D == 0 ~ "no" )) %>%
mutate(chr.liver.D = case_when(chr.liver.D == 1 ~ "yes" , chr.liver.D == 0 ~ "no" )) %>%
mutate(coronary.D = case_when(coronary.D == 1 ~ "yes" , coronary.D == 0 ~ "no" )) %>%
mutate(stroke = case_when(stroke == 1 ~ "yes" , stroke == 0 ~ "no" )) %>%
mutate(malignancy = case_when(malignancy == 1 ~ "yes" , malignancy == 0 ~ "no" ))
head(variables.of.int.recoded)
variables.of.int.recoded <- variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(death = case_when(death == 1 ~ "yes" , death == 0 ~ "no" )) %>%
mutate(sex = case_when(sex == 1 ~ "male" , sex == 0 ~ "female" )) %>%
mutate(COPD = case_when(COPD == 1 ~ "yes" , COPD == 0 ~ "no" )) %>%
mutate(Other.resp.D = case_when(Other.resp.D == 1 ~ "yes" , Other.resp.D == 0 ~ "no" )) %>%
mutate(CHF = case_when(CHF == 1 ~ "yes" , CHF == 0 ~ "no" )) %>%
mutate(AF = case_when(AF == 1 ~ "yes" , AF == 0 ~ "no" )) %>%
mutate(chr.renal.D = case_when(chr.renal.D == 1 ~ "yes" , chr.renal.D == 0 ~ "no" )) %>%
mutate(chr.liver.D = case_when(chr.liver.D == 1 ~ "yes" , chr.liver.D == 0 ~ "no" )) %>%
mutate(coronary.D = case_when(coronary.D == 1 ~ "yes" , coronary.D == 0 ~ "no" )) %>%
mutate(stroke = case_when(stroke == 1 ~ "yes" , stroke == 0 ~ "no" )) %>%
mutate(malignancy = case_when(malignancy == 1 ~ "yes" , malignancy == 0 ~ "no" ))
head(variables.of.int.recoded)
get_summary_stats(variables.of.int.recoded, type = "common")
table(variables.of.int.recoded$sofa)
freq_table(variables.of.int.recoded)
summarise(variables.of.int.recoded)
summarise(variables.of.int.recoded)
tbl_su(variables.of.int.recoded)
tbl_summary(variables.of.int.recoded)
tbl_summary(variables.of.int.recoded,
missing = "no")
model.1 <- glm(death ~ IAC + age + sex + sofa + service_unit + COPD +
Other.resp.D + CHF + AF + chr.renal.D + chr.liver.D +
coronary.D + stroke + malignancy + wbc + hemoglobin +
platelet + sodium + potassium + bicarbonate + chloride +
urea + creat + po2 + pco2,
variables.of.int,
family = "binomial")
summary(model.1)
anova(model.1)
tbl_regression(model.1, exponentiate = TRUE)
model.2 <- glm(death ~ age + sofa + Other.resp.D + stroke + wbc + hemoglobin + bicarbonate + chloride + urea,
variables.of.int,
family = "binomial")
tbl_regression(model.2, exponentiate = TRUE)
# Set response and predictor variables
response <- "death"
predictor <- c("IAC", "age", "sex", "sofa", "service_unit", "COPD", "Other.resp.D",
"CHF", "AF", "chr.renal.D", "chr.liver.D", "coronary.D", "stroke",
"malignancy", "wbc", "hemoglobin", "platelet", "sodium", "potassium",
"bicarbonate", "chloride", "urea", "creat", "po2", "pco2")
library(gt)
library(finalfit)
install.packages("finalfit")
library(finalfit)
variables.of.int %>% glmuni(response, predictor)
variables.of.int %>%
glmuni(response, predictor) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Crude OR",
estimate_suffix = " (95% CI)")
# Save results
glmuni <- variables.of.int %>%
glmuni(response, predictor) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Crude OR",
estimate_suffix = " (95% CI)")
kable(glmuni)
gt(glmuni)
glmmulti_full <- variables.of.int %>%
glmmulti(response, predictor) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Adjusted OR - full model")
kable(glmmulti_full)
# Set predictor variables to be included in the final model
predictor_final <- c("age", "sofa", "Other.resp.D", "stroke", "wbc", "hemoglobin",
"bicarbonate", "chloride", "urea")
# Save results
glmmulti_final <- variables.of.int %>%
glmuni(response, predictor_final) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Adjusted OR - final model",
estimate_suffix = " (95% CI, p value)")
kable(glmmulti_final)
summary <- variables.of.int.recoded %>%
summary_factorlist(response, predictor)
summary
summary %>%
finalfit_merge(glmuni)
summary <- variables.of.int.recoded %>%
summary_factorlist(response, predictor, fit_id = TRUE)
summary %>%
finalfit_merge(glmuni)
summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
finaltab %>% select(-fit_id, -index)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
summary <- variables.of.int.recoded %>%
summary_factorlist(response, predictor, fit_id = TRUE)
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
summary <- variables.of.int.recoded %>%
summary_factorlist(response, predictor)
kable(summary)
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
summary <- variables.of.int.recoded %>%
summary_factorlist(response, predictor, fit_id = TRUE)
kable(summary)
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
finaltab <- summary %>%
finalfit_merge(glmuni) %>%
finalfit_merge(glmmulti_full) %>%
finalfit_merge(glmmulti_final)
finaltab %>% select(-fit_id, -index) %>%
rename(Variables = label,
" " = levels) %>%
kable()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
model.1 <- glm(death ~ .,
variables.of.int,
family = "binomial")
summary(model.1)
step(model.1,
direction = "both",
trace = FALSE)
model.1 <- glm(death ~ .,
na.omit(variables.of.int),
family = "binomial")
step(model.1,
direction = "both",
trace = FALSE)
summary(model.1.best)
model.1.best <- step(model.1,
direction = "both",
trace = FALSE)
model.1.best <- step(model.1,
direction = "both",
trace = FALSE)
summary(model.1.best)
summary(model.1)
plot(report(model.2))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse) # for data handling
library(EpiStats)  # Provides functions for epidemiological analysis
library(knitr)      # to get well formatted tables
library(rstatix)    # Provides a simple and intuitive pipe-friendly framework for statistical tests
library(gtsummary)  # Creates publication-ready summary tables for statistical models and data frames
library(report)     # Facilitates the creation of reports for statistical models, including model summaries and visualizations
library(finalfit)   # Simplifies the process of creating final results tables and plots for publication, particularly in medical research.
catheter <- read.csv("full_cohort_data.csv")
glimpse(catheter)
variables.of.int <- catheter %>%
select(IAC = aline_flg,
death = day_28_flg,
age,
sex = gender_num,
sofa = sofa_first,
service_unit,
COPD = copd_flg,
Other.resp.D = resp_flg,
CHF = chf_flg,
AF = afib_flg,
chr.renal.D = renal_flg,
chr.liver.D = liver_flg,
coronary.D = cad_flg,
stroke = stroke_flg,
malignancy = mal_flg,
wbc = wbc_first,
hemoglobin = hgb_first,
platelet = platelet_first,
sodium = sodium_first,
potassium = potassium_first,
bicarbonate = tco2_first,
chloride = chloride_first,
urea = bun_first,
creat = creatinine_first,
po2 = po2_first,
pco2 = pco2_first)
head(variables.of.int)
variables.of.int.recoded <- variables.of.int %>%
mutate(IAC = case_when(IAC == 1 ~ "yes" , IAC == 0 ~ "no" )) %>%
mutate(death = case_when(death == 1 ~ "yes" , death == 0 ~ "no" )) %>%
mutate(sex = case_when(sex == 1 ~ "male" , sex == 0 ~ "female" )) %>%
mutate(COPD = case_when(COPD == 1 ~ "yes" , COPD == 0 ~ "no" )) %>%
mutate(Other.resp.D = case_when(Other.resp.D == 1 ~ "yes" , Other.resp.D == 0 ~ "no" )) %>%
mutate(CHF = case_when(CHF == 1 ~ "yes" , CHF == 0 ~ "no" )) %>%
mutate(AF = case_when(AF == 1 ~ "yes" , AF == 0 ~ "no" )) %>%
mutate(chr.renal.D = case_when(chr.renal.D == 1 ~ "yes" , chr.renal.D == 0 ~ "no" )) %>%
mutate(chr.liver.D = case_when(chr.liver.D == 1 ~ "yes" , chr.liver.D == 0 ~ "no" )) %>%
mutate(coronary.D = case_when(coronary.D == 1 ~ "yes" , coronary.D == 0 ~ "no" )) %>%
mutate(stroke = case_when(stroke == 1 ~ "yes" , stroke == 0 ~ "no" )) %>%
mutate(malignancy = case_when(malignancy == 1 ~ "yes" , malignancy == 0 ~ "no" ))
head(variables.of.int.recoded)
tbl_summary(variables.of.int.recoded,
missing = "no")
result.1 <- CS(variables.of.int, death, IAC, exact = TRUE, full = FALSE)
kable(result.1$df1, align = result.1$df1.align)
kable(result.1$df2, align = result.1$df2.align)
result.2 <- CSTable(variables.of.int, "death",
exposure = c("IAC", "sex", "COPD", "Other.resp.D", "CHF", "chr.renal.D", "AF"),
exact = TRUE,
sort = "rr",
full = TRUE)
kable(result.2$df, align = result.2$align)
result.3 <- CSInter(variables.of.int, "death", "IAC", by = "service_unit", full = TRUE)
kable(result.3$df1, align = result.3$align)
kable(result.3$df2, align = result.3$align)
model.1 <- glm(death ~ .,
na.omit(variables.of.int),
family = "binomial")
summary(model.1)
# Select best model according to AIC using mixed selection
model.1.best <- step(model.1,
direction = "both",
trace = FALSE)
summary(model.1.best)
tbl_regression(model.1.best, exponentiate = TRUE)
report(model.1.best)
# Set response and predictor variables
response <- "death"
predictor <- c("IAC", "age", "sex", "sofa", "service_unit", "COPD", "Other.resp.D",
"CHF", "AF", "chr.renal.D", "chr.liver.D", "coronary.D", "stroke",
"malignancy", "wbc", "hemoglobin", "platelet", "sodium", "potassium",
"bicarbonate", "chloride", "urea", "creat", "po2", "pco2")
# Save results
glmuni <- variables.of.int %>%
glmuni(response, predictor) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Crude OR",
estimate_suffix = " (95% CI, p value)")
kable(glmuni)
glmmulti_full <- variables.of.int %>%
glmmulti(response, predictor) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Adjusted OR - full model")
kable(glmmulti_full)
# Set predictor variables to be included in the final model
predictor_final <- c("age", "sofa", "Other.resp.D", "AF", "stroke", "wbc",
"hemoglobin", "sodium", "bicarbonate", "chloride", "urea")
# Save results
glmmulti_final <- variables.of.int %>%
glmuni(response, predictor_final) %>%
fit2df(explanatory_name = "Variables",
estimate_name = "Adjusted OR - final model")
kable(glmmulti_final)
glmuni$index <- 1:nrow(glmuni) # to keep track of the original order
# We then merge the data frames
finaltab <- glmuni %>%
merge(glmmulti_full) %>%
left_join(glmmulti_final, by = "Variables")
# Sort the merged data frame based on the original order
finaltab <- finaltab[order(finaltab$index), ] %>%
select(-index)
rownames(finaltab) <- NULL
kable(finaltab)
plot(report(model.2))
library(pROC)
roc(death ~ fitted(model.1.best),
variables.of.int)
roc(death ~ fitted(model.1),
variables.of.int)
knit_with_parameters("~/Documents/GitHub/Epi and R/Evans cohort/Evans Cohort Analysis.Rmd")
spam7
library(spam7)
